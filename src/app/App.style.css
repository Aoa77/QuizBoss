:root {
    /* Defines the app container's width and height. */
    /* Width/Height aspect ratio of 9:16 (0.5625) and 16:9 (1.77777777). */
    /* The min() function is used to force the 9:16 portrait orientation. */
    --width: min(100svw, calc(0.5625 * 100svh));
    --height: min(100svh, calc(1.77777777 * 100svw));

    /* center the app container within the dimensions of device */
    --deviceCenterWidth: calc(100svw / 2);
    --deviceCenterHeight: calc(100svh / 2);

    /* horizontal */
    --appCenterWidth: calc(var(--width) / 2);
    --mainCenterLeft: calc(var(--deviceCenterWidth) - var(--appCenterWidth));

    /* vertical */
    --appCenterHeight: calc(var(--height) / 2);
    --mainCenterTop: calc(var(--deviceCenterHeight) - var(--appCenterHeight));
}

/* normalize box-sizing for all elements */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    user-select: none;
}

/* 1rem scales relative to the dimensions of the container */
html {
    --fw: calc(var(--width) / 100);
    --fh: calc(var(--height) / 100);
    font-size: calc(0.5 * (var(--fw) + var(--fh)));
}

/* set background colors */
body {
    background-color: var(--tv-BODY_backgroundColor);
    overflow: hidden;
}
main {
    background-color: var(--tv-MAIN_backgroundColor);
    overflow: hidden;
}

/* <main> is the app container */
/* 100cqw and 100cqh are equal to its width and height */
main {
    margin-left: var(--mainCenterLeft);
    margin-top: var(--mainCenterTop);
    width: var(--width);
    height: var(--height);
    container-type: size;
}

/* each section overlays <main> */
/* use margin to offset */
section {
    position: absolute;
    /* top: 0;
    left: 0; */

    width: 100cqw;
    height: 100cqh;

    align-content: center;
    text-align: center;

    opacity: 0;
}

/* sections are initially transparent, their inner elements are opaque */
section > * {
    opacity: 1;
}

/* LoadingSpinner is used both when <App /> is loading and by <App /> itself */
section#LoadingSpinner {
    color: var(--tv-LoadingSpinner_color);
    font-family: "monospace";
    font-size: 3rem;
    font-weight: bold;
    height: 2cqh;
    margin-top: 15cqh;
}
.lds-ellipsis,
.lds-ellipsis div {
    box-sizing: border-box;
}
.lds-ellipsis {
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
}
.lds-ellipsis div {
    position: absolute;
    top: 33.33333px;
    width: 13.33333px;
    height: 13.33333px;
    border-radius: 50%;
    background: currentColor;
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.lds-ellipsis div:nth-child(1) {
    left: 8px;
    animation: lds-ellipsis1 0.6s infinite;
}
.lds-ellipsis div:nth-child(2) {
    left: 8px;
    animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(3) {
    left: 32px;
    animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(4) {
    left: 56px;
    animation: lds-ellipsis3 0.6s infinite;
}
@keyframes lds-ellipsis1 {
    0% {
        transform: scale(0);
    }
    100% {
        transform: scale(1);
    }
}
@keyframes lds-ellipsis3 {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(0);
    }
}
@keyframes lds-ellipsis2 {
    0% {
        transform: translate(0, 0);
    }
    100% {
        transform: translate(24px, 0);
    }
}
